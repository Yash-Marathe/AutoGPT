def getPropertyFromLocalPropertiesFile(name, defaultValue) {
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader ->
            localProperties.load(reader)
        }
    }
    return localProperties.getProperty(name, defaultValue)
}

def flutterSdk = getPropertyFromLocalPropertiesFile('flutter.sdk', '')
if (flutterSdk.isEmpty()) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = getPropertyFromLocalPropertiesFile('flutter.versionCode', '1')
def flutterVersionName = getPropertyFromLocalPropertiesFile('flutter.versionName', '1.0')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterSdk/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.auto_gpt_flutter_client"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.auto_gpt_flutter_client"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
